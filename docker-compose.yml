version: '3.8'
name: codelab
services:
    ###
    # Frontend web
    ###
    frontend:
        build:
            context: ./
            dockerfile: ./app/Dockerfile
            args:
                ENVIRONMENT: ${ENVIRONMENT}
                NEXT_PUBLIC_FRONTEND_URL: ${NEXT_PUBLIC_FRONTEND_URL}
        env_file:
            - .env
        depends_on:
            user-db:
                condition: service_started
            proto-builder:
                condition: service_completed_successfully
        develop:
            watch:
                - action: sync
                  path: ./app
                  target: /app
                - action: rebuild
                  path: ./app/package.json
                - action: rebuild
                  path: ./app/next.config.js
                - action: sync
                  path: ./protobufs/build/ts/protobufs
                  target: /app/src/protobufs
        command: npm run dev -- -H 0.0.0.0
        profiles:
            - frontend
        networks:
            - codelabweb
        secrets:
            - userdb-root-username
            - userdb-root-password

    ###
    # Service Containers
    ###
    code-runner:
        build:
            context: ./
            dockerfile: ./services/code-runner/Dockerfile
        env_file:
            - .env
        depends_on:
            proto-builder:
                condition: service_completed_successfully
        develop:
            watch:
                - action: sync
                  path: ./services/code-runner/src/main
                  target: /service
                - action: rebuild
                  path: ./services/code-runner/requirements.txt
                - action: sync
                  path: ./services/common/src/main
                  target: /service/common
                - action: rebuild
                  path: ./services/common/common-requirements.txt
                - action: sync
                  path: ./protobufs/build/python/protobufs
                  target: /service/protobufs
                - action: sync
                  path: ./config.yaml
                  target: ./config.yaml
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: watchmedo auto-restart --recursive --pattern="*.py" --directory="/service/" python3 /service/service.py
        profiles:
            - backend
            - code-runner
            - submission
        configs:
            - service-config
        networks:
            - codelabmesh

    problem:
        build:
            context: ./
            dockerfile: ./services/problem/Dockerfile
        env_file:
            - .env
        depends_on:
            proto-builder:
                condition: service_completed_successfully
            problem-db:
                condition: service_started
        develop:
            watch:
                - action: sync
                  path: ./services/problem/src/main
                  target: /service
                - action: rebuild
                  path: ./services/problem/requirements.txt
                - action: sync
                  path: ./services/common/src/main
                  target: /service/common
                - action: rebuild
                  path: ./services/common/common-requirements.txt
                - action: sync
                  path: ./protobufs/build/python/protobufs
                  target: /service/protobufs
        command: watchmedo auto-restart --recursive --pattern="*.py" --directory="/service/" python3 /service/service.py
        profiles:
            - backend
            - problem
            - submission
        networks:
            - codelabmesh
        configs:
            - service-config
        secrets:
            - problemdb-root-username
            - problemdb-root-password

    submission:
        build:
            context: ./
            dockerfile: ./services/submission/Dockerfile
        env_file:
            - .env
        depends_on:
            proto-builder:
                condition: service_completed_successfully
            submission-db:
                condition: service_started
            problem:
                condition: service_started
            code-runner:
                condition: service_started
#            status-queue:
#                condition: service_started
        develop:
            watch:
                - action: sync
                  path: ./services/submission/src/main
                  target: /service
                - action: rebuild
                  path: ./services/submission/requirements.txt
                - action: sync
                  path: ./services/common/src/main
                  target: /service/common
                - action: rebuild
                  path: ./services/common/common-requirements.txt
                - action: sync
                  path: ./protobufs/build/python/protobufs
                  target: /service/protobufs
        command: watchmedo auto-restart --recursive --pattern="*.py" --directory="/service/" python3 /service/service.py
        profiles:
            - backend
            - submission
        networks:
            - codelabmesh
        configs:
            - service-config
        secrets:
            - submissiondb-root-username
            - submissiondb-root-password

    status:
        build:
            context: ./
            dockerfile: ./services/status/Dockerfile
        env_file:
            - .env
        depends_on:
            proto-builder:
                condition: service_completed_successfully
            status-queue:
                condition: service_started
        develop:
            watch:
                - action: sync
                  path: ./services/status/src/main
                  target: /service
                - action: rebuild
                  path: ./services/status/requirements.txt
                - action: sync
                  path: ./services/common/src/main
                  target: /service/common
                - action: rebuild
                  path: ./services/common/common-requirements.txt
                - action: sync
                  path: ./protobufs/build/python/protobufs
                  target: /service/protobufs
        command: watchmedo auto-restart --recursive --pattern="*.py" --directory="/service/" python3 /service/service.py
        profiles:
            - backend
            - status
        networks:
            - codelabmesh
        configs:
            - service-config

    status-queue:
        build:
            context: ./
            dockerfile: ./containers/status-queue/Dockerfile
        environment:
            STATUS_QUEUE_PORT: ${STATUS_QUEUE_PORT}
            STATUS_QUEUE_MANAGEMENT_PLUGIN_PORT: ${STATUS_QUEUE_MANAGEMENT_PLUGIN_PORT}
        env_file:
            - .env
        profiles:
            - backend
            - status
        networks:
            - codelabmesh

    ###
    # Databases
    ###
    user-db:
        image: mongo:7.0.2
        environment:
            MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/userdb-root-username
            MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/userdb-root-password
            MONGO_INITDB_DATABASE: admin
            MONGO_USERNAME_FILE: /run/secrets/userdb-username
            MONGO_PASSWORD_FILE: /run/secrets/userdb-password
        command: mongod --port ${USER_DB_PORT}
        profiles:
            - frontend
        networks:
            - codelabweb
        secrets:
            - userdb-root-username
            - userdb-root-password
            - userdb-username
            - userdb-password

    problem-db:
        image: mongo:7.0.2
        environment:
            MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/problemdb-root-username
            MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/problemdb-root-password
            MONGO_INITDB_DATABASE: admin
            MONGO_USERNAME_FILE: /run/secrets/problemdb-username
            MONGO_PASSWORD_FILE: /run/secrets/problemdb-password
            MONGO_DATABASE: problem
        command: mongod --port ${PROBLEM_DB_PORT}
        profiles:
            - backend
            - problem
            - submission
        networks:
            - codelabmesh
        secrets:
            - problemdb-root-username
            - problemdb-root-password
            - problemdb-username
            - problemdb-password

    submission-db:
        image: mongo:7.0.2
        environment:
            MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/submissiondb-root-username
            MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/submissiondb-root-password
            MONGO_INITDB_DATABASE: admin
            MONGO_USERNAME_FILE: /run/secrets/submissiondb-username
            MONGO_PASSWORD_FILE: /run/secrets/submissiondb-password
            MONGO_DATABASE: submission
        command: mongod --port ${SUBMISSION_DB_PORT}
        profiles:
            - backend
            - submission
        networks:
            - codelabmesh
        secrets:
            - submissiondb-root-username
            - submissiondb-root-password
            - submissiondb-username
            - submissiondb-password

    ###
    # Build Containers
    ###
    proto-builder:
        build:
            context: ./
            dockerfile: ./containers/proto-builder/Dockerfile
        env_file:
            - .env
        develop:
            watch:
                - action: rebuild
                  path: ./containers/proto-builder/buf.gen.yaml
        volumes:
            - ./protobufs:/build/protobufs
        working_dir: /build
        command: generate --template /etc/buf/buf.gen.yaml
        profiles:
            - build
            - backend
            - frontend
            - problem
            - code-runner
            - submission
            - status

    ###
    # Test Containers
    ###
    integration:
        build:
            context: ./
            dockerfile: ./containers/integration-test/Dockerfile
        env_file:
            - .env
        volumes:
            - ./services/code-runner/src/test/integration:/tests/code-runner:ro
            - ./services/problem/src/test/integration:/tests/problem:ro
            - ./services/submission/src/test/integration:/tests/submission:ro
            - ./services/status/src/test/integration:/tests/status:ro
            - ./protobufs/build/python:/protobufs:ro
        command: pytest -o log_cli=true -o cache_dir=/test-cache -k ${TEST_FILTER} /tests
        profiles:
            - integration
        networks:
            - codelabmesh

    code-runner-unit-test:
        build:
            context: ./
            dockerfile: ./containers/unit-test/Dockerfile
        env_file:
            - .env
        volumes:
            - ./services/common/src/main:/service_common/common:ro
            - ./services/code-runner/src/main:/service:ro
            - ./services/code-runner/src/test/unit:/tests:ro
            - ./services/code-runner/src/test/.pytest_cache:/test-cache
            - ./protobufs/build/python:/protobufs:ro
            - /var/run/docker.sock:/var/run/docker.sock
        command: pytest -o log_cli=true -o cache_dir=/test-cache -k ${TEST_FILTER} /tests
        profiles:
            - test
        configs:
            - service-config

    ###
    # Envoy and API stats
    ###
    api-gateway:
        build:
            context: ./
            dockerfile: ./containers/api-gateway/Dockerfile
            args:
                FRONTEND_PORT: ${FRONTEND_PORT}
                PROBLEM_SERVICE_PORT: ${PROBLEM_SERVICE_PORT}
                SUBMISSION_SERVICE_PORT: ${SUBMISSION_SERVICE_PORT}
                STATUS_SERVICE_PORT: ${STATUS_SERVICE_PORT}
        develop:
            watch:
                - action: rebuild
                  path: ./containers/api-gateway/envoy.json
        env_file:
            - .env
        depends_on:
            problem:
                condition: service_started
            code-runner:
                condition: service_started
            statsd-exporter:
                condition: service_started
        command: /usr/local/bin/envoy -c /etc/envoy/envoy.json -l debug --log-path /tmp/envoy-info.log
        profiles:
            - backend
            - gateway
        ports:
            - ${HOST}:${ENVOY_EDGE_GATEWAY_PORT}:443
        networks:
            codelabmesh:
            codelabweb:
                aliases:
                    - codelab.obliie.dev
        secrets:
            - source: api-gateway-cert
              target: /etc/envoy/certs/cert.pem
            - source: api-gateway-key
              target: /etc/envoy/certs/key.pem

    statsd-exporter:
        image: prom/statsd-exporter:latest
        profiles:
            - backend
        networks:
            - codelabmesh

    prometheus:
        build:
            context: ./
            dockerfile: ./containers/prometheus/Dockerfile
        depends_on:
            statsd-exporter:
                condition: service_started
        command: '--config.file=/etc/prometheus/prometheus.yaml'
        profiles:
            - backend
        ports:
            - ${HOST}:${PROMETHEUS_PORT}:9090
        networks:
            - codelabmesh

networks:
    codelabmesh:
        driver: bridge
        name: codelabmesh
    codelabweb:
        driver: bridge
        name: codelabweb

configs:
    service-config:
        file: ./config.yaml

secrets:
    api-gateway-cert:
        file: ./secrets/api_gateway_cert.pem
    api-gateway-key:
        file: ./secrets/api_gateway_key.pem
    userdb-root-username:
        file: ./secrets/userdb_root_username
    userdb-root-password:
        file: ./secrets/userdb_root_password
    userdb-username:
        file: ./secrets/userdb_username
    userdb-password:
        file: ./secrets/userdb_password
    problemdb-root-username:
        file: ./secrets/problemdb_root_username
    problemdb-root-password:
        file: ./secrets/problemdb_root_password
    problemdb-username:
        file: ./secrets/problemdb_username
    problemdb-password:
        file: ./secrets/problemdb_password
    submissiondb-root-username:
        file: ./secrets/submissiondb_root_username
    submissiondb-root-password:
        file: ./secrets/submissiondb_root_password
    submissiondb-username:
        file: ./secrets/submissiondb_username
    submissiondb-password:
        file: ./secrets/submissiondb_password
